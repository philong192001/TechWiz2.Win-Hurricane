// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Models;

namespace WebApplication.Migrations
{
    [DbContext(typeof(MyDBContext))]
    partial class MyDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<string>("Date")
                        .HasColumnName("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Distance")
                        .HasColumnName("distance")
                        .HasColumnType("int");

                    b.Property<string>("EndFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdDriver")
                        .HasColumnName("id_driver")
                        .HasColumnType("int");

                    b.Property<int?>("IdUser")
                        .HasColumnName("id_user")
                        .HasColumnType("int");

                    b.Property<int?>("IsCancel")
                        .HasColumnName("isCancel")
                        .HasColumnType("int");

                    b.Property<int?>("Member")
                        .HasColumnName("member")
                        .HasColumnType("int");

                    b.Property<string>("StartTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDriver");

                    b.HasIndex("IdUser");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("WebApplication.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("WebApplication.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCar")
                        .HasColumnName("Id_Car")
                        .HasColumnType("int");

                    b.Property<string>("IdProof")
                        .HasColumnName("id_proof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnName("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCar");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("WebApplication.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("WebApplication.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateRun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdUser")
                        .HasColumnName("id_user")
                        .HasColumnType("int");

                    b.Property<string>("StartTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeRun")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("WebApplication.Models.ShareBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookingId")
                        .HasColumnName("booking_id")
                        .HasColumnType("int");

                    b.Property<int?>("IdSharetrip")
                        .HasColumnName("id_sharetrip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("IdSharetrip");

                    b.ToTable("ShareBooking");
                });

            modelBuilder.Entity("WebApplication.Models.ShareTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("int");

                    b.Property<int?>("BookingId")
                        .HasColumnName("booking_id")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasColumnName("date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Distance")
                        .HasColumnName("distance")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId")
                        .HasColumnName("driver_id")
                        .HasColumnType("int");

                    b.Property<string>("StartTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnName("status")
                        .HasColumnType("int");

                    b.Property<int?>("SubAmount")
                        .HasColumnName("sub_amount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShareTrip");
                });

            modelBuilder.Entity("WebApplication.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPoof")
                        .HasColumnName("id_poof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnName("role")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .HasColumnName("user_name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApplication.Models.Booking", b =>
                {
                    b.HasOne("WebApplication.Models.Driver", "IdDriverNavigation")
                        .WithMany("Booking")
                        .HasForeignKey("IdDriver")
                        .HasConstraintName("FK__Booking__id_driv__4D94879B");

                    b.HasOne("WebApplication.Models.Users", "IdUserNavigation")
                        .WithMany("Booking")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__Booking__member__4CA06362");
                });

            modelBuilder.Entity("WebApplication.Models.Driver", b =>
                {
                    b.HasOne("WebApplication.Models.Car", "IdCarNavigation")
                        .WithMany("Driver")
                        .HasForeignKey("IdCar")
                        .HasConstraintName("FK__Driver__Id_Car__440B1D61");
                });

            modelBuilder.Entity("WebApplication.Models.Feedback", b =>
                {
                    b.HasOne("WebApplication.Models.Users", "User")
                        .WithMany("Feedback")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Feedback__descri__46E78A0C");
                });

            modelBuilder.Entity("WebApplication.Models.Notification", b =>
                {
                    b.HasOne("WebApplication.Models.Users", "IdUserNavigation")
                        .WithMany("Notification")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__Notificat__id_us__49C3F6B7");
                });

            modelBuilder.Entity("WebApplication.Models.ShareBooking", b =>
                {
                    b.HasOne("WebApplication.Models.Booking", "Booking")
                        .WithMany("ShareBooking")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__ShareBook__booki__5165187F");

                    b.HasOne("WebApplication.Models.ShareTrip", "IdSharetripNavigation")
                        .WithMany("ShareBooking")
                        .HasForeignKey("IdSharetrip")
                        .HasConstraintName("FK_ShareBooking_ShareTrip");
                });
#pragma warning restore 612, 618
        }
    }
}
